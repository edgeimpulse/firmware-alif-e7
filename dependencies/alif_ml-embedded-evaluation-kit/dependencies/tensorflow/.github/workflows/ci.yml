# YAML schema for GitHub Actions:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
#
# Helpful YAML parser to clarify YAML syntax:
# https://yaml-online-parser.appspot.com/
#
#
# This file contains jobs that are run prior to merging a pull request.
#
# This file can not be run stand-alone. It is called from tests_entry.yml as part of
# the ci automation or from run-ci.yml for scheduled or dispatch triggering.

name: CI

on:
  workflow_call:
    inputs:
      trigger-sha:
        required: true
        type: string

jobs:
  bazel_tests:
    runs-on: ubuntu-latest

    name: Bazel (presubmit)
    steps:
      - uses: actions/setup-python@v4
        with: 
          python-version: '3.10'
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.trigger-sha }}
      - name: Install dependencies
        run: |
          sudo ci/install_bazel.sh
          pip3 install Pillow
          pip3 install Wave
          export PYTHON_BIN_PATH=$(which python)
          sudo apt install -y python-numpy
      - name: Test
        run: |
          tensorflow/lite/micro/tools/ci_build/test_bazel.sh

  cortex_m_tests:
    runs-on: ubuntu-latest

    name: Cortex-M (presubmit)
    steps:
      - uses: actions/setup-python@v4
        with: 
          python-version: '3.10'
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.trigger-sha }}
      - name: Install dependencies
        run: |
          pip3 install Pillow
          pip3 install Wave
      - name: Test
        run: |
          cd ../
          tflite-micro/tensorflow/lite/micro/tools/ci_build/test_bluepill.sh tflite-micro/
          tflite-micro/tensorflow/lite/micro/tools/ci_build/test_stm32f4.sh tflite-micro/

  check_code_style:
    runs-on: ubuntu-latest

    name: Code Style (presubmit)
    steps:
      - uses: actions/setup-python@v4
        with: 
          python-version: '3.10'
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.trigger-sha }}
      - name: Check
        uses: docker://ghcr.io/tflm-bot/tflm-ci:latest
        with:
          args: /bin/sh -c "tensorflow/lite/micro/tools/ci_build/test_code_style.sh"

  project_generation:
    runs-on: ubuntu-latest

    name: Project Generation (presubmit)
    steps:
      - uses: actions/setup-python@v4
        with: 
          python-version: '3.10'
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.trigger-sha }}
      - name: Install dependencies
        run: |
          pip3 install Pillow
          pip3 install Wave
      - name: Test
        run: |
          cd ../
          tflite-micro/tensorflow/lite/micro/tools/ci_build/test_project_generation.sh tflite-micro/

  x86_tests:
    runs-on: ubuntu-latest

    name: Makefile x86 (presubmit)
    steps:
      - uses: actions/setup-python@v4
        with: 
          python-version: '3.10'
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.trigger-sha }}
      - name: Install dependencies
        run: |
          pip3 install Pillow
          pip3 install Wave
      - name: Test
        run: |
          tensorflow/lite/micro/tools/ci_build/test_makefile.sh
          cd ../
          tflite-micro/tensorflow/lite/micro/tools/ci_build/test_x86.sh tflite-micro/

